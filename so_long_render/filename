==201513== Memcheck, a memory error detector
==201513== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==201513== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==201513== Command: ./so_long_test map/map2.ber
==201513== Parent PID: 201506
==201513== 
==201513== Invalid write of size 8
==201513==    at 0x1107BB: get_path_g (2_path_loader.c:26)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
==201513==  Address 0x4c4db20 is 0 bytes after a block of size 32 alloc'd
==201513==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==201513==    by 0x110752: get_path_g (2_path_loader.c:19)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
==201513== 
==201513== Invalid write of size 8
==201513==    at 0x1107CD: get_path_g (2_path_loader.c:27)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
==201513==  Address 0x4c4db28 is 8 bytes after a block of size 32 alloc'd
==201513==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==201513==    by 0x110752: get_path_g (2_path_loader.c:19)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
==201513== 
==201513== Invalid write of size 8
==201513==    at 0x1107DF: get_path_g (2_path_loader.c:28)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
==201513==  Address 0x4c4db30 is 16 bytes after a block of size 32 alloc'd
==201513==    at 0x4846828: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==201513==    by 0x110752: get_path_g (2_path_loader.c:19)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
==201513== 
==201513== Invalid write of size 8
==201513==    at 0x1107F1: get_path_g (2_path_loader.c:29)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
==201513==  Address 0x4c4db38 is 24 bytes after a block of size 32 in arena "client"
==201513== 

valgrind: m_mallocfree.c:304 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 96, hi = 1131974.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==201513==    at 0x58044A9A: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x58044BDF: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x58044D75: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x5804EDB8: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x5803CDCA: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x5803B3E7: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x5803FFD0: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x5803A260: ??? (in /usr/libexec/valgrind/memcheck-amd64-linux)
==201513==    by 0x10093C5325: ???
==201513==    by 0x10091ADF0F: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 201513)
==201513==    at 0x110803: get_path_g (2_path_loader.c:30)
==201513==    by 0x110B06: get_paths (2_path_loader.c:95)
==201513==    by 0x1106A8: get_images_sets (1_start_img_loader.c:55)
==201513==    by 0x10E815: main (unit_test.c:34)
client stack range: [0x1FFEFFD000 0x1FFF000FFF] client SP: 0x1FFEFFF1E0
valgrind stack range: [0x10090AE000 0x10091ADFFF] top usage: 18232 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

